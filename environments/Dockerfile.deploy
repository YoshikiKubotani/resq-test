ARG BASE_IMAGE=python:3.10.16-slim-bullseye
FROM ${BASE_IMAGE}

ARG PROJECT_NAME=resq-backend
ARG APPLICATION_DIRECTORY=/var/app/
ARG BACKEND_PATH=applications/backend

COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.9.0 /lambda-adapter /opt/extensions/lambda-adapter

ARG RUN_UV_SYNC_AT_BUILD_TIME="false"

# UV requires a cache directory, but AWS Lambda's home directory is read-only.
# Therefore, the cache directory is set to `/tmp/uv/cache`, which is a writable directory provided by the Lambda system.
# `AWS_LWA_READINESS_CHECK_PORT` specifies the port number used for the health check of the AWS Lambda web adapter.
# `AWS_LWA_READINESS_CHECK_PATH` specifies the endpoint used for the health check of the AWS Lambda web adapter.
ENV DEBIAN_FRONTEND="noninteractive" \
    LC_ALL="C.UTF-8" \
    LANG="C.UTF-8" \
    PYTHONPATH=${APPLICATION_DIRECTORY} \
    UV_CACHE_DIR="/tmp/uv/cache" \
    UV_PROJECT_ENVIRONMENT="/tmp/uv/.venv" \
    AWS_LWA_READINESS_CHECK_PORT=8000 \
    AWS_LWA_READINESS_CHECK_PATH="/api/health"

RUN python3 -m pip install uv

WORKDIR ${APPLICATION_DIRECTORY}
# Do not copy `uv.lock` because it may contain the development dependencies.
COPY ${BACKEND_PATH}/pyproject.toml  ./
COPY ${BACKEND_PATH}/src ./src
COPY ${BACKEND_PATH}/data ./data
RUN uv sync --no-dev

CMD ["uv", "run", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "debug", "--workers", "4"]
