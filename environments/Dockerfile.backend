ARG BASE_IMAGE=python:3.10.16-slim-bullseye
FROM ${BASE_IMAGE}

ARG PROJECT_NAME=resq-backend
ARG USER_NAME=trailblazer
ARG GROUP_NAME=trailblazers
ARG UID=1000
ARG GID=1000
ARG APPLICATION_DIRECTORY=/home/${USER_NAME}/${PROJECT_NAME}
ARG BACKEND_PATH=applications/backend

ARG UV_TOOL_BIN_DIRECTORY=/home/${USER_NAME}/.local/bin/
ARG RUN_UV_SYNC_AT_BUILD_TIME="false"

ENV DEBIAN_FRONTEND="noninteractive" \
    LC_ALL="C.UTF-8" \
    LANG="C.UTF-8" \
    PYTHONPATH=${APPLICATION_DIRECTORY} \
	UV_TOOL_BIN_DIR=${UV_TOOL_BIN_DIRECTORY} \
	PATH=${UV_TOOL_BIN_DIRECTORY}:${PATH}

# Install Poethepoet directly using pip to type "poe" command without "uv run".
RUN python3 -m pip install --upgrade pip setuptools requests wheel six urllib3 \
    && python3 -m pip install uv poethepoet

# Add user. Without this, following process is executed as admin.
RUN groupadd -g ${GID} ${GROUP_NAME} \
    && useradd -ms /bin/sh -u ${UID} -g ${GID} ${USER_NAME}

USER ${USER_NAME}
WORKDIR ${APPLICATION_DIRECTORY}

# If ${RUN_UV_SYNC_AT_BUILD_TIME} = "true", install Python package by uv and move .venv under ${HOME}.
# This process is for CI (GitHub Actions). To prevent overwrite by volume of docker compose, .venv is moved under ${HOME}.
COPY --chown=${UID}:${GID} ${BACKEND_PATH}/pyproject.toml ${BACKEND_PATH}/uv.lock  ./
RUN test ${RUN_UV_SYNC_AT_BUILD_TIME} = "true" && uv sync || echo "skip to run uv sync."
RUN test ${RUN_UV_SYNC_AT_BUILD_TIME} = "true" && mv ${APPLICATION_DIRECTORY}/.venv ${HOME}/.venv || echo "skip to move .venv."

CMD ["bash"]
