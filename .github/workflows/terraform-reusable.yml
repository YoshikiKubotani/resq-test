name: aws-resource-provision
permissions: {}
on:
  workflow_call:
    inputs:
      image-tag:
        required: true
        type: string
      environment:
        required: true
        type: string
      ecr-repository-url:
        required: true
        type: string
      ecr-repository-arn:
        required: true
        type: string
    secrets:
      ALLOWED_ORIGINS:
        required: true
      OPENAI_API_KEY:
        required: true
defaults:
  run:
    shell: bash
concurrency:
  group: terraform-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  TF_WORKING_DIR: terraform/application
  AWS_REGION: ap-northeast-1
  SESSION_NAME: gh-oidc-${{ github.run_id }}-${{ github.run_attempt }}
  DOCKER_COMPOSE_DIRECTORY: environments/ci

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        id: credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.PROJECT_NAME }}-github-actions-role
          role-session-name: ${{ env.SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true

      - name: Boot up terraform container
        run: |
            AWS_ACCESS_KEY_ID=${{ steps.credentials.outputs.aws-access-key-id }} \
            AWS_SECRET_ACCESS_KEY=${{ steps.credentials.outputs.aws-secret-access-key }} \
            AWS_SESSION_TOKEN=${{ steps.credentials.outputs.aws-session-token }} \
            AWS_DEFAULT_REGION=${{ env.AWS_REGION }} \
            docker compose up terraform -d
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Change directory permissions
        run: chmod -R 777 .

      - name: Terraform Format
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        run: docker compose exec -T terraform terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        run: docker compose exec -T terraform terraform validate

      - name: Terraform Init
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        run: docker compose exec -T terraform terraform -chdir=environments init -backend-config=backend-${{ inputs.environment }}.hcl

      - name: Terraform Plan
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        run: |
          docker compose exec -T terraform terraform -chdir=environments plan \
            -var="environment=${{ inputs.environment }}" \
            -var="project_name=${{ vars.PROJECT_NAME }}" \
            -var="image_tag=${{ inputs.image-tag }}" \
            -var="ecr_repository_url=${{ inputs.ecr-repository-url }}" \
            -var="ecr_repository_arn=${{ inputs.ecr-repository-arn }}" \
            -var="lambda_memory_size=${{ vars.LAMBDA_MEMORY }}" \
            -var="lambda_timeout=${{ vars.LAMBDA_TIMEOUT }}" \
            -var='allowed_origins=${{ secrets.ALLOWED_ORIGINS }}' \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
            -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release'
        run: docker compose exec -T terraform terraform -chdir=application apply -auto-approve tfplan