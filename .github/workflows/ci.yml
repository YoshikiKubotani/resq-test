name: lint-and-test
permissions: {}
on:
  pull_request:
    paths: ["applications/backend/**", "applications/chrome-extension/**"]
defaults:
  run:
    shell: bash
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  DOCKER_FILE_DIRECTORY: environments
  DOCKER_COMPOSE_DIRECTORY: environments/ci

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check version info
        run: pwd && docker compose version && docker --version

      # Provide a builder instance with docker buildx.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker images using buildx
      - name: Build Docker images
        uses: docker/bake-action@v6
        with:
          files: "${{ env.DOCKER_COMPOSE_DIRECTORY }}/docker-compose.yaml"
          workdir: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
          set: |
            *.output=type=tar,dest=./{{.Target}}.tar

      # Upload tar files to be used in the next step
      - name: Upload tar files
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: "*.tar"

  backend:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 3
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built images
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker images
        run: docker load -i backend.tar
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Create and start docker container
        run: docker compose up --no-build -d
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      # pytest-cov export coverage data to a file
      # However, the directory made by actions/checkout does not allow write
      # chmod is needed to resolve above problem
      - name: Change permission
        run: chmod -R 777 .

      # In the built stage of Docker image, .venv dir is moved from working directory to prevent
      # overwrite by volume operation of Docker. Here, .venv is moved back to working directory.
      - name: Move .venv directory
        run: docker compose exec -T backend mv ../.venv .
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Run lint
        run: docker compose exec -T backend poe lint
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Run test code
        run: docker compose exec -T backend poe test
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

  chrome-extension:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 3
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built images
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker images
        run: docker load -i chrome-extension.tar
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Create and start docker container
        run: docker compose up --no-build -d
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Run lint
        run: docker compose exec -T chrome-extension yarn lint
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      # - name: Run test code
      #   run: docker compose exec -T chrome-extension yarn test
      #   working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}