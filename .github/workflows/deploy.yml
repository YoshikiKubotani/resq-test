name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: environment
      stage:
        description: 'Deployment stage'
        type: choice
        options:
          - ecr-only
          - complete
        default: 'complete'
        required: true

env:
  AWS_REGION: ap-northeast-1
  IMAGE_NAME: resq-lambda-web-adapter

jobs:
  prepare:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
    steps:
      - name: Generate Image Tag
        id: image-tag
        run: |
          TAG=$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

  deploy-ecr:
    needs: prepare
    if: inputs.stage == 'ecr-only'
    uses: ./.github/workflows/terraform-ecr.yml
    with:
      environment: ${{ inputs.environment }}
    secrets:
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  build-and-push:
    needs: prepare
    if: inputs.stage == 'complete'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.PROJECT_NAME }}-${{ inputs.environment }}-github-actions-role
          role-session-name: gh-oidc-${{ github.run_id }}-${{ github.run_attempt }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.PROJECT_NAME }}-${{ inputs.environment }}
          IMAGE_TAG: ${{ needs.prepare.outputs.image-tag }}
        run: |
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -f environments/Dockerfile.deploy .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy-complete:
    needs: [prepare, build-and-push]
    if: inputs.stage == 'complete'
    uses: ./.github/workflows/terraform-complete.yml
    with:
      image-tag: ${{ needs.prepare.outputs.image-tag }}
      environment: ${{ inputs.environment }}
    secrets:
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
      LAMBDA_MEMORY: ${{ secrets.LAMBDA_MEMORY }}
      LAMBDA_TIMEOUT: ${{ secrets.LAMBDA_TIMEOUT }}